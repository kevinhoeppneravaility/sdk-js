(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{111:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var a=n(0),i=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=i.a.createContext({}),c=function(e){var t=i.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return i.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},m=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=c(n),m=a,d=u["".concat(s,".").concat(m)]||u[m]||b[m]||r;return n?i.a.createElement(d,o(o({ref:t},l),{},{components:n})):i.a.createElement(d,o({ref:t},l))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,s[1]=o;for(var l=2;l<r;l++)s[l]=n[l];return i.a.createElement.apply(null,s)}return i.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},70:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return p})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return u}));var a=n(3),i=n(7),r=(n(0),n(111)),s=["components"],o={title:"Settings"},p={unversionedId:"api/definitions/settings",id:"api/definitions/settings",isDocsHomePage:!1,title:"Settings",description:"Settings are stored by several values such as applicationId, userId, payerId, customerId, and region. Each setting may contain a key value pair of data that can preserve specific information per application.",source:"@site/docs/api/definitions/settings.md",slug:"/api/definitions/settings",permalink:"/sdk-js/api/definitions/settings",editUrl:"https://github.com/availity/sdk-js/edit/master/docusaurus/docs/api/definitions/settings.md",version:"current",sidebar:"someSidebar",previous:{title:"Regions",permalink:"/sdk-js/api/definitions/regions"},next:{title:"Spaces",permalink:"/sdk-js/api/definitions/spaces"}},l=[{value:"GET /api/utils/v1/settings",id:"get-apiutilsv1settings",children:[{value:"Parameters",id:"parameters",children:[]},{value:"Example Request",id:"example-request",children:[]},{value:"Example Response",id:"example-response",children:[]}]},{value:"PUT /api/utils/v1/settings",id:"put-apiutilsv1settings",children:[{value:"Example Request",id:"example-request-1",children:[]},{value:"Example Response",id:"example-response-1",children:[]}]}],c={toc:l};function u(e){var t=e.components,n=Object(i.a)(e,s);return Object(r.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Settings are stored by several values such as applicationId, userId, payerId, customerId, and region. Each setting may contain a key value pair of data that can preserve specific information per application."),Object(r.b)("h2",{id:"get-apiutilsv1settings"},"GET /api/utils/v1/settings"),Object(r.b)("p",null,"Query settings by parameters"),Object(r.b)("h3",{id:"parameters"},"Parameters"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"applicationId")," ",Object(r.b)("em",{parentName:"li"},"(required)")," \u2014 Find settings associated to a specific application Id."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"payerId")," ",Object(r.b)("em",{parentName:"li"},"(optional)")," \u2014 Filter by payer Id."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"roleId")," ",Object(r.b)("em",{parentName:"li"},"(optional)")," \u2014 Filter by an associated role."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"regionId")," ",Object(r.b)("em",{parentName:"li"},"(optional)")," \u2014 Filter by region."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"customerType")," ",Object(r.b)("em",{parentName:"li"},"(optional)")," \u2014 Filter by the customer type."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"officeId")," ",Object(r.b)("em",{parentName:"li"},"(optional)")," \u2014 Filter by the office Id."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"userSource")," ",Object(r.b)("em",{parentName:"li"},"(optional)")," \u2014 Filter by source system of the user. Used by admins to look at non gateway users."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"userId")," ",Object(r.b)("em",{parentName:"li"},"(optional)")," \u2014 Filter by specific user Id."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"offset")," ",Object(r.b)("em",{parentName:"li"},"(optional)")," - Paging offset. Defaults to ",Object(r.b)("inlineCode",{parentName:"li"},"0"),". This is the zero-based index of the first item to return."),Object(r.b)("li",{parentName:"ul"},Object(r.b)("strong",{parentName:"li"},"limit")," ",Object(r.b)("em",{parentName:"li"},"(optional)")," - Paging limit. Defaults to ",Object(r.b)("inlineCode",{parentName:"li"},"50"),". The maximum is ",Object(r.b)("inlineCode",{parentName:"li"},"50"),". This is the maximum number of items to return.")),Object(r.b)("h3",{id:"example-request"},"Example Request"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre"},"GET https://apps.availity.com/api/utils/v1/settings?application=myApp&userId=myUserAka\n")),Object(r.b)("h3",{id:"example-response"},"Example Response"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json"},'{\n  "totalCount": 1,\n  "count": 1,\n  "offset": 0,\n  "limit": 1,\n  "links": {\n    "self": {\n      "href": "https://test-apps.availity.com/api/utils/v1/settings?applicationId=myApp&userId=myUserAka"\n    }\n  },\n  "settings": [\n    {\n      "settingKey": "settingValue",\n      "key2": "value2"\n    }\n  ]\n}\n')),Object(r.b)("h2",{id:"put-apiutilsv1settings"},"PUT /api/utils/v1/settings"),Object(r.b)("p",null,"Saves a setting value for the given scope."),Object(r.b)("h3",{id:"example-request-1"},"Example Request"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},'curl -i -X PUT -H "Content-Type: application/json" -d \'{"scope": { "applicationId": "myApp", "userId": "myUserAka"}, "myKey": "myData"}\' "http://localhost:3000/api/utils/v1/settings"\n')),Object(r.b)("h3",{id:"example-response-1"},"Example Response"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-json"},'{\n  "myKey": "myData"\n}\n')))}u.isMDXComponent=!0}}]);