(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{111:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return u}));var r=t(0),i=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=i.a.createContext({}),c=function(e){var n=i.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},d=function(e){var n=c(e.components);return i.a.createElement(p.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},m=i.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(t),m=r,u=d["".concat(o,".").concat(m)]||d[m]||b[m]||a;return t?i.a.createElement(u,l(l({ref:n},p),{},{components:t})):i.a.createElement(u,l({ref:n},p))}));function u(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<a;p++)o[p]=t[p];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},83:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return s})),t.d(n,"toc",(function(){return p})),t.d(n,"default",(function(){return d}));var r=t(3),i=t(7),a=(t(0),t(111)),o=["components"],l={title:"Providers"},s={unversionedId:"api/definitions/providers",id:"api/definitions/providers",isDocsHomePage:!1,title:"Providers",description:"A provider represents a person or non person entity that provides healthcare service.",source:"@site/docs/api/definitions/providers.md",slug:"/api/definitions/providers",permalink:"/sdk-js/api/definitions/providers",editUrl:"https://github.com/availity/sdk-js/edit/master/docusaurus/docs/api/definitions/providers.md",version:"current",sidebar:"someSidebar",previous:{title:"Permissions",permalink:"/sdk-js/api/definitions/permissions"},next:{title:"Regions",permalink:"/sdk-js/api/definitions/regions"}},p=[{value:"GET /api/internal/v1/providers",id:"get-apiinternalv1providers",children:[{value:"Parameters",id:"parameters",children:[]},{value:"Example Request",id:"example-request",children:[]},{value:"Example Response",id:"example-response",children:[]}]}],c={toc:p};function d(e){var n=e.components,t=Object(i.a)(e,o);return Object(a.b)("wrapper",Object(r.a)({},c,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"A provider represents a person or non person entity that provides healthcare service."),Object(a.b)("h2",{id:"get-apiinternalv1providers"},"GET /api/internal/v1/providers"),Object(a.b)("p",null,"Find provider information by organization."),Object(a.b)("h3",{id:"parameters"},"Parameters"),Object(a.b)("ul",null,Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"customerId")," ",Object(a.b)("em",{parentName:"li"},"(required)")," \u2014 List of organization ids to check for providers."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"providerId")," ",Object(a.b)("em",{parentName:"li"},"(optional)")," \u2014 The Provider Id to filter by. It is the last set digits of the id."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"role")," ",Object(a.b)("em",{parentName:"li"},"(optional)")," \u2014 List of provider roles to filter by. Examples: ",Object(a.b)("inlineCode",{parentName:"li"},"ATNG"),", ",Object(a.b)("inlineCode",{parentName:"li"},"BILL"),", ",Object(a.b)("inlineCode",{parentName:"li"},"PAY"),", etc."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"q")," ",Object(a.b)("em",{parentName:"li"},"(optional)")," - A list of search terms to filter by."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"sortBy")," ",Object(a.b)("em",{parentName:"li"},"(optional)")," - Allows the client to specify a field to sort results by. Example: ",Object(a.b)("inlineCode",{parentName:"li"},"name"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"sortDirection")," ",Object(a.b)("em",{parentName:"li"},"(optional)")," - Allows the client to specify a sort direction. Clients can sort by ",Object(a.b)("inlineCode",{parentName:"li"},"asc")," or ",Object(a.b)("inlineCode",{parentName:"li"},"desc"),". Defaults to ",Object(a.b)("inlineCode",{parentName:"li"},"asc"),"."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"offset")," ",Object(a.b)("em",{parentName:"li"},"(optional)")," - Paging offset. Defaults to ",Object(a.b)("inlineCode",{parentName:"li"},"0"),". This is the zero-based index of the first item to return."),Object(a.b)("li",{parentName:"ul"},Object(a.b)("strong",{parentName:"li"},"limit")," ",Object(a.b)("em",{parentName:"li"},"(optional)")," - Paging limit. Defaults to ",Object(a.b)("inlineCode",{parentName:"li"},"50"),". The maximum is ",Object(a.b)("inlineCode",{parentName:"li"},"50"),". This is the maximum number of items to return.")),Object(a.b)("h3",{id:"example-request"},"Example Request"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre"},"GET https://apps.availity.com/api/internal/v1/providers?customerId=123456\n")),Object(a.b)("h3",{id:"example-response"},"Example Response"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-json"},'{\n  "totalCount": 2,\n  "count": 2,\n  "offset": 0,\n  "limit": 50,\n  "links": {\n    "self": {\n      "href": "https://apps.availity.com/api/internal/v1/providers?customerId=123456"\n    }\n  },\n  "providers": [\n    {\n      "id": "274929-269194-123456",\n      "businessName": "GENERIC PHARMACY",\n      "uiDisplayName": "GENERIC PHARMACY",\n      "atypical": false,\n      "npi": "1003921024",\n      "customerIds": ["123456"],\n      "roles": [\n        {\n          "code": "ATNG",\n          "value": "Attending"\n        },\n        {\n          "code": "BILL",\n          "value": "Billing"\n        },\n        {\n          "code": "OPRG",\n          "value": "Operating Physician"\n        },\n        {\n          "code": "PAY",\n          "value": "Pay to Provider"\n        },\n        {\n          "code": "RFAC",\n          "value": "Referred to Facility"\n        },\n        {\n          "code": "RFRD",\n          "value": "Referred to Provider"\n        },\n        {\n          "code": "RFRG",\n          "value": "Referring Provider"\n        },\n        {\n          "code": "RNDG",\n          "value": "Rendering Provider"\n        },\n        {\n          "code": "RQST",\n          "value": "Requesting Provider"\n        },\n        {\n          "code": "SFAC",\n          "value": "Service Facility"\n        }\n      ],\n      "primaryPhone": {\n        "internationalCellularCode": "&#x2b;1",\n        "areaCode": "334",\n        "phoneNumber": "671-3784"\n      },\n      "primaryFax": {\n        "internationalCellularCode": "&#x2b;1",\n        "areaCode": "334",\n        "phoneNumber": "671-0181"\n      },\n      "primaryAddress": {\n        "line1": "2115 E MAIN ST",\n        "line2": "STE 3",\n        "city": "DOTHAN",\n        "state": "ALABAMA",\n        "stateCode": "AL",\n        "zip": {\n          "code": "36301",\n          "addon": "3044"\n        }\n      }\n    },\n    {\n      "id": "274329-269194-123456",\n      "lastName": "LINCOLN",\n      "firstName": "ABE",\n      "middleName": "E",\n      "uiDisplayName": "LINCOLN, ABE E",\n      "atypical": false,\n      "npi": "1902208000",\n      "customerIds": ["123456"],\n      "roles": [\n        {\n          "code": "ATNG",\n          "value": "Attending"\n        },\n        {\n          "code": "BILL",\n          "value": "Billing"\n        },\n        {\n          "code": "OPRG",\n          "value": "Operating Physician"\n        },\n        {\n          "code": "PAY",\n          "value": "Pay to Provider"\n        },\n        {\n          "code": "RFAC",\n          "value": "Referred to Facility"\n        }\n      ],\n      "primarySpecialty": {\n        "code": "207X00000X",\n        "value": "Orthopaedic Surgery"\n      },\n      "primaryAddress": {\n        "line1": "12901 BRUCE B DOWNS BLVD",\n        "line2": "UNIVERSITY OF SOUTH FLORIDA",\n        "city": "TAMPA",\n        "state": "FLORIDA",\n        "stateCode": "FL",\n        "zip": {\n          "code": "33612",\n          "addon": "4742"\n        }\n      }\n    }\n  ]\n}\n')))}d.isMDXComponent=!0}}]);