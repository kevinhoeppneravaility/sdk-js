(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{101:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return b})),a.d(t,"metadata",(function(){return s})),a.d(t,"toc",(function(){return c})),a.d(t,"default",(function(){return m}));var n=a(3),r=a(7),i=(a(0),a(111)),l=["components"],b={title:"Yup Extensions"},s={unversionedId:"resources/yup",id:"resources/yup",isDocsHomePage:!1,title:"Yup Extensions",description:"Method extensions for the yup",source:"@site/docs/resources/yup.md",slug:"/resources/yup",permalink:"/sdk-js/resources/yup",editUrl:"https://github.com/availity/sdk-js/edit/master/docusaurus/docs/resources/yup.md",version:"current",sidebar:"someSidebar",previous:{title:"Resolving Urls",permalink:"/sdk-js/resources/resolve-url"},next:{title:"Error Logging",permalink:"/sdk-js/resources/exceptions"}},c=[{value:"Install",id:"install",children:[{value:"NPM",id:"npm",children:[]},{value:"Yarn",id:"yarn",children:[]}]},{value:"Usage",id:"usage",children:[]},{value:"Table of Contents",id:"table-of-contents",children:[]},{value:"Methods",id:"methods",children:[{value:"isRequired String,Array,Number,Object",id:"isrequired-stringarraynumberobject",children:[]},{value:"npi String",id:"npi-string",children:[]},{value:"phone String,Number",id:"phone-stringnumber",children:[]}]},{value:"Additional Schemas",id:"additional-schemas",children:[]},{value:"<strong>dateRange</strong>",id:"daterange",children:[{value:"Parameters",id:"parameters-3",children:[]},{value:"Example",id:"example-3",children:[]},{value:"<strong>methods</strong>",id:"methods-1",children:[]},{value:"between",id:"between",children:[]},{value:"min",id:"min",children:[]},{value:"max",id:"max",children:[]},{value:"distance",id:"distance",children:[]},{value:"typeError",id:"typeerror",children:[]}]},{value:"<strong>avDate</strong>",id:"avdate",children:[{value:"<strong>Methods</strong>",id:"methods-2",children:[]},{value:"between",id:"between-1",children:[]}]}],o={toc:c};function m(e){var t=e.components,a=Object(r.a)(e,l);return Object(i.b)("wrapper",Object(n.a)({},o,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Method extensions for the ",Object(i.b)("a",{parentName:"p",href:"https://github.com/jquense/yup"},"yup")),Object(i.b)("p",null,Object(i.b)("a",{parentName:"p",href:"https://www.npmjs.com/package/@availity/yup"},Object(i.b)("img",{parentName:"a",src:"https://img.shields.io/npm/v/@availity/yup.svg?style=for-the-badge",alt:"Version"}))),Object(i.b)("h2",{id:"install"},"Install"),Object(i.b)("h3",{id:"npm"},"NPM"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"npm install @availity/yup yup\n")),Object(i.b)("h3",{id:"yarn"},"Yarn"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-bash"},"yarn add @availity/yup yup\n")),Object(i.b)("h2",{id:"usage"},"Usage"),Object(i.b)("p",null,"Import the package in the root of your project somewhere and you will have access to all of the provided yup methods."),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import '@availity/yup';\nimport * as yup from 'yup';\n\nconst schema = yup.string().isRequired(true, 'This field is required.');\n\nschema.isValid('12-12-2012');\n")),Object(i.b)("p",null,"If you want to utilize the custom date validators you need to import them directly:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import { avDate, dateRange } from '@availity/yup';\n\nconst dateSchema = avDate();\nconst dateRangeSchema = dateRange({\n  startKey: 'helloDate',\n  endKey: 'worldDate',\n}).between('12/10/2012', '12/13/2012');\n\ndateSchema.isValid('12-12-2012');\ndateRangeSchema.isValid({\n  helloDate: '12/11/2012',\n  worldDate: '12/12/2012',\n});\n")),Object(i.b)("h2",{id:"table-of-contents"},"Table of Contents"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#isrequired-stringarraynumberobject"},"isRequired")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#npi-string"},"npi")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#phone-stringnumber"},"phone")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#daterange"},"dateRange")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",{parentName:"li",href:"#avdate"},"avDate"))),Object(i.b)("h2",{id:"methods"},"Methods"),Object(i.b)("hr",null),Object(i.b)("h3",{id:"isrequired-stringarraynumberobject"},"isRequired ","[",Object(i.b)("strong",{parentName:"h3"},"String"),",",Object(i.b)("strong",{parentName:"h3"},"Array"),",",Object(i.b)("strong",{parentName:"h3"},"Number"),",",Object(i.b)("strong",{parentName:"h3"},"Object"),"]"),Object(i.b)("h4",{id:"parameters"},"Parameters"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"required")," - ",Object(i.b)("inlineCode",{parentName:"li"},"boolean"),". Optional. Whether or not the given string is required. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"true")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"message")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". Optional. Custom error message when invalid. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"This Field is Required."))),Object(i.b)("h4",{id:"example"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import '@availity/yup';\nimport * as yup from 'yup';\n\nyup.string().isRequired();\nyup.string().isRequired(true, 'Custom Error Message');\nyup.number().isRequired();\nyup.array().isRequired();\nyup.object().isRequired();\n")),Object(i.b)("h3",{id:"npi-string"},"npi ","[",Object(i.b)("strong",{parentName:"h3"},"String"),"]"),Object(i.b)("h4",{id:"parameters-1"},"Parameters"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"message")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". Optional. Custom error message when invalid. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"This field is invalid."))),Object(i.b)("h4",{id:"example-1"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import '@availity/yup';\nimport * as yup from 'yup';\n\nconst schema = yup.string().npi();\n")),Object(i.b)("h3",{id:"phone-stringnumber"},"phone ","[",Object(i.b)("strong",{parentName:"h3"},"String"),",",Object(i.b)("strong",{parentName:"h3"},"Number"),"]"),Object(i.b)("p",null,"Validates a phone number. Must be 10 digits without country code, can be formatted when using string schema."),Object(i.b)("h4",{id:"parameters-2"},"Parameters"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"message")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". Optional. Custom error message when invalid. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"This field is invalid."))),Object(i.b)("h4",{id:"example-2"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import '@availity/yup';\nimport * as yup from 'yup';\n\nconst schema = yup.string().phone();\n\nschema.isValid('(444) 444-4444'); // true\nschema.isValid('+1 (444) 444-4444'); // true\nschema.isValid('444-444-4444'); // true\nschema.isValid('+1 444-444-4444'); // true\nschema.isValid('444.444.4444'); // true\nschema.isValid('(444) 444 4444'); // true\n\nconst schema = yup.number.phone();\n\nschema.isValid('4444444444'); // true\nschema.isValid('444 444 4444'); // true\nschema.isValid('44444444445'); // false\nschema.isValid('+14444444444'); // false\n")),Object(i.b)("h2",{id:"additional-schemas"},"Additional Schemas"),Object(i.b)("hr",null),Object(i.b)("h2",{id:"daterange"},Object(i.b)("strong",{parentName:"h2"},"dateRange")),Object(i.b)("p",null,"Evaluates a date range object."),Object(i.b)("h3",{id:"parameters-3"},"Parameters"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"options")," - ",Object(i.b)("inlineCode",{parentName:"li"},"object"),". optional. Range Options.",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"format")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". optional. The format to parse the dates with."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"startKey")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". optional. The key for the start date. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"startDate")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"endKey")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". optional. The key for the end date. Default: ",Object(i.b)("inlineCode",{parentName:"li"},"endDate")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"message")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),'. Optional. Custom error message when invalid. Default: "Date Range is invalid."')),Object(i.b)("h3",{id:"example-3"},"Example"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import { dateRange } from '@availity/yup';\n\nconst dateRangeSchema = dateRange({\n  startKey: 'helloDate',\n  endKey: 'worldDate',\n}).between('12/10/2012', '12/13/2012');\n\ndateRangeSchema.isValid({\n  helloDate: '12/11/2012',\n  worldDate: '12/12/2012',\n});\n")),Object(i.b)("h3",{id:"methods-1"},Object(i.b)("strong",{parentName:"h3"},"methods")),Object(i.b)("h3",{id:"between"},"between"),Object(i.b)("p",null,"Accepts range of dates the date range can fall between."),Object(i.b)("h4",{id:"parameters-4"},"parameters"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"minDate")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". ",Object(i.b)("strong",{parentName:"li"},"required"),". The minimum date."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"maxDate")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". ",Object(i.b)("strong",{parentName:"li"},"required"),". The max date."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"message")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),'. Optional. Custom error message when invalid. Default: "Date Range must be between XX/XX/XXXX and XX/XX/XXXX."')),Object(i.b)("h4",{id:"example-4"},"example"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import { dateRange } from '@availity/yup';\n\nconst schema = dateRange().between('12/01/2012', '12/10/2012');\n\nschema.isValid({\n  startDate: '12/02/2012',\n  endDate: '12/03/2012',\n}); // valid\n")),Object(i.b)("h3",{id:"min"},"min"),Object(i.b)("p",null,"Accepts date the date range must start after."),Object(i.b)("h4",{id:"parameters-5"},"parameters"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"minDate")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". ",Object(i.b)("strong",{parentName:"li"},"required"),". The minimum date."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"message")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),'. Optional. Custom error message when invalid. Default: "Date Range must start after XX/XX/XXXX"')),Object(i.b)("h4",{id:"example-5"},"example"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import { dateRange } from '@availity/yup';\n\nconst schema = dateRange().min('12/01/2012');\n\nschema.isValid({\n  startDate: '12/02/2012',\n  endDate: '12/03/2012',\n}); // valid\n")),Object(i.b)("h3",{id:"max"},"max"),Object(i.b)("p",null,"Accepts date, the date range must start before."),Object(i.b)("h4",{id:"parameters-6"},"parameters"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"maxDate")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". ",Object(i.b)("strong",{parentName:"li"},"required"),". The max date."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"message")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),'. Optional. Custom error message when invalid. Default: "Date Range must start before XX/XX/XXXX"')),Object(i.b)("h4",{id:"example-6"},"example"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import { dateRange } from '@availity/yup';\n\nconst schema = dateRange().max('12/10/2012');\n\nschema.isValid({\n  startDate: '12/02/2012',\n  endDate: '12/03/2012',\n}); // valid\n")),Object(i.b)("h3",{id:"distance"},"distance"),Object(i.b)("p",null,"Evaluates if date range is within a set distance"),Object(i.b)("h4",{id:"parameters-7"},"parameters"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"options")," - ",Object(i.b)("inlineCode",{parentName:"li"},"object"),". ",Object(i.b)("strong",{parentName:"li"},"required"),". distance options.",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"min")," - ",Object(i.b)("inlineCode",{parentName:"li"},"object"),". optional. The minimum distance between the date ranges",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"value")," - ",Object(i.b)("inlineCode",{parentName:"li"},"number"),". ",Object(i.b)("strong",{parentName:"li"},"required"),". the value of the minimum distance"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"units")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". optional. the weight of the value. default ",Object(i.b)("inlineCode",{parentName:"li"},"day")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"max")," - ",Object(i.b)("inlineCode",{parentName:"li"},"object"),". optional. The maximum distance between the date ranges",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"value")," - ",Object(i.b)("inlineCode",{parentName:"li"},"number"),". ",Object(i.b)("strong",{parentName:"li"},"required"),". the value of the max distance"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"units")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". optional. the weight of the value. default ",Object(i.b)("inlineCode",{parentName:"li"},"day")))),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"format")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". optional. custom parse format for date validation")))),Object(i.b)("h4",{id:"example-7"},"example"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import { dateRange } from '@availity/yup';\n\nconst schema = dateRange().distance({\n  min: {\n    value: 3,\n    units: 'day',\n  },\n});\n\nschema.isValid({\n  startDate: '12/02/2012',\n  endDate: '12/03/2012',\n}); // valid\n")),Object(i.b)("h3",{id:"typeerror"},"typeError"),Object(i.b)("p",null,"Sets a custom error message for invalid date ranges to override the 'Start and End Date are required.' default when only one of the start or end date is falsy. Useful when combined with @availity/date Date Range react component that rejects invalid dates."),Object(i.b)("h4",{id:"parameters-8"},"parameters"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"options")," - ",Object(i.b)("inlineCode",{parentName:"li"},"object"),". typeError options.",Object(i.b)("ul",{parentName:"li"},Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"message")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". optional. The custom error message to display ")))),Object(i.b)("h4",{id:"example-8"},"example"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import { dateRange } from '@availity/yup';\n\nconst schema = dateRange()\n});\n\nschema.isValid({\n  startDate: '',\n  endDate: '12/03/2012',\n}); // throws 'Start and End Date are required.'\n\nconst customErrSchema = dateRange().typeError({message: 'Custom error message'})\n\ncustomErrSchema.isValid({\n  startDate: '',\n  endDate: '12/03/2012'\n}); // throws 'Custom error message'\n")),Object(i.b)("h2",{id:"avdate"},Object(i.b)("strong",{parentName:"h2"},"avDate")),Object(i.b)("p",null,"Similar to the default date yup object and accepts a string or ",Object(i.b)("inlineCode",{parentName:"p"},"moment")," object instead. See ",Object(i.b)("a",{parentName:"p",href:"https://github.com/jquense/yup#date"},"Date")," for ",Object(i.b)("inlineCode",{parentName:"p"},"min")," and ",Object(i.b)("inlineCode",{parentName:"p"},"max")),Object(i.b)("h3",{id:"methods-2"},Object(i.b)("strong",{parentName:"h3"},"Methods")),Object(i.b)("h3",{id:"between-1"},"between"),Object(i.b)("p",null,"Takes an object of dates the given date must fall between"),Object(i.b)("h4",{id:"parameters-9"},"parameters"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"minDate")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". ",Object(i.b)("strong",{parentName:"li"},"required"),". The minimum date."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"maxDate")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),". ",Object(i.b)("strong",{parentName:"li"},"required"),". The max date."),Object(i.b)("li",{parentName:"ul"},Object(i.b)("strong",{parentName:"li"},"message")," - ",Object(i.b)("inlineCode",{parentName:"li"},"string"),'. Optional. Custom error message when invalid. Default: "Date must be between XX/XX/XXXX and XX/XX/XXXX."')),Object(i.b)("h4",{id:"example-9"},"example"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-js"},"import { avDate } from '@availity/yup';\n\nconst schema = avDate().between('12/01/2012', '12/10/2012');\n\nschema.isValid('12/02/2012'); // valid\n")))}m.isMDXComponent=!0},111:function(e,t,a){"use strict";a.d(t,"a",(function(){return m})),a.d(t,"b",(function(){return u}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function b(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=r.a.createContext({}),o=function(e){var t=r.a.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):b(b({},t),e)),a},m=function(e){var t=o(e.components);return r.a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=o(a),d=n,u=m["".concat(l,".").concat(d)]||m[d]||p[d]||i;return a?r.a.createElement(u,b(b({ref:t},c),{},{components:a})):r.a.createElement(u,b({ref:t},c))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,l=new Array(i);l[0]=d;var b={};for(var s in t)hasOwnProperty.call(t,s)&&(b[s]=t[s]);b.originalType=e,b.mdxType="string"==typeof e?e:n,l[1]=b;for(var c=2;c<i;c++)l[c]=a[c];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,a)}d.displayName="MDXCreateElement"}}]);