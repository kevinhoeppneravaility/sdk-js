(window.webpackJsonp=window.webpackJsonp||[]).push([[35],{106:function(e,a,t){"use strict";t.r(a),t.d(a,"frontMatter",(function(){return c})),t.d(a,"metadata",(function(){return o})),t.d(a,"toc",(function(){return s})),t.d(a,"default",(function(){return p}));var n=t(3),i=t(7),l=(t(0),t(111)),r=["components"],c={title:"Analytics"},o={unversionedId:"resources/analytics",id:"resources/analytics",isDocsHomePage:!1,title:"Analytics",description:"A package providing a base Analytics class to track events and page views",source:"@site/docs/resources/analytics.mdx",slug:"/resources/analytics",permalink:"/sdk-js/resources/analytics",editUrl:"https://github.com/availity/sdk-js/edit/master/docusaurus/docs/resources/analytics.mdx",version:"current",sidebar:"someSidebar",previous:{title:"Contributing",permalink:"/sdk-js/contributing"},next:{title:"Environment Vars",permalink:"/sdk-js/resources/env-var"}},s=[{value:"Install",id:"install",children:[{value:"NPM",id:"npm",children:[]},{value:"Yarn",id:"yarn",children:[]}]},{value:"Configuration",id:"configuration",children:[{value:"Options",id:"options",children:[]}]},{value:"Plugins",id:"plugins",children:[{value:"Plugin Methods",id:"plugin-methods",children:[]}]},{value:"Defined Plugins",id:"defined-plugins",children:[{value:"AvSplunkAnalytics",id:"avsplunkanalytics",children:[]}]},{value:"Methods",id:"methods",children:[{value:"<code>init()</code>",id:"init-1",children:[]},{value:"<code>setPageTracking(value)</code>",id:"setpagetrackingvalue",children:[]},{value:"<code>trackEvent(properties)</code>",id:"trackeventproperties",children:[]},{value:"<code>trackPageView(url)</code>",id:"trackpageviewurl",children:[]}]},{value:"AutoTrack Logged events",id:"autotrack-logged-events",children:[]},{value:"Logging User Ids",id:"logging-user-ids",children:[]},{value:"Special Attributes",id:"special-attributes",children:[{value:"<code>data-analytics-space-id</code>",id:"data-analytics-space-id",children:[]},{value:"<code>data-analytics-application-id</code>",id:"data-analytics-application-id",children:[]},{value:"<code>data-analytics-action</code>",id:"data-analytics-action",children:[]},{value:"<code>data-analytics-label</code>",id:"data-analytics-label",children:[]},{value:"<code>data-analytics-category</code>",id:"data-analytics-category",children:[]},{value:"<code>data-analytics-value</code>",id:"data-analytics-value",children:[]}]},{value:"Tutorial",id:"tutorial",children:[]}],d={toc:s};function p(e){var a=e.components,t=Object(i.a)(e,r);return Object(l.b)("wrapper",Object(n.a)({},d,t,{components:a,mdxType:"MDXLayout"}),Object(l.b)("p",null,"A package providing a base Analytics class to track events and page views"),Object(l.b)("p",null,Object(l.b)("a",{parentName:"p",href:"https://www.npmjs.com/package/@availity/analytics-core"},Object(l.b)("img",{parentName:"a",src:"https://img.shields.io/npm/v/@availity/analytics-core.svg?style=for-the-badge",alt:"Version"}))),Object(l.b)("h2",{id:"install"},"Install"),Object(l.b)("h3",{id:"npm"},"NPM"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"npm install @availity/analytics-core\n")),Object(l.b)("h3",{id:"yarn"},"Yarn"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-bash"},"yarn add @availity/analytics-core\n")),Object(l.b)("h2",{id:"configuration"},"Configuration"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"AvAnalytics")," requires Plugins and a Promise lib."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"new AvAnalytics(plugins, promise);\n")),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"AvAnalytics")," also has an optional 3rd parameter, a boolean to determine if pageTracking is enabled.\nFor page tracking to be used, ",Object(l.b)("inlineCode",{parentName:"p"},"startPageTracking")," and ",Object(l.b)("inlineCode",{parentName:"p"},"stopPageTracking")," functions must be defined to create listeners and call ",Object(l.b)("inlineCode",{parentName:"p"},"trackPageView"),".\n",Object(l.b)("inlineCode",{parentName:"p"},"AvAnalytics"),' also has an optional 4th parameter, "autoTrack", a boolean which default to ',Object(l.b)("inlineCode",{parentName:"p"},"true"),".\nWhen ",Object(l.b)("inlineCode",{parentName:"p"},"true"),', "autoTrack" will be enabled which will automatically log'),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"new AvAnalytics(plugins, promise, pageTracking, autoTrack, options);\n")),Object(l.b)("h3",{id:"options"},"Options"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"attributePrefix")," string. Overrides the default prefix for getting attributes."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"recursive")," boolean. If ",Object(l.b)("inlineCode",{parentName:"li"},"true"),", will add on all attributes from the clicked/focused node up to the root element. It requires one attribute to have contain ",Object(l.b)("inlineCode",{parentName:"li"},"action"),".")),Object(l.b)("p",null,"Example using the ",Object(l.b)("inlineCode",{parentName:"p"},"recursive")," option ( Will add all 3 attributes when the ",Object(l.b)("inlineCode",{parentName:"p"},"anchor")," tag is clicked. If the container is clicked nothing will happen ):"),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-html"},'<div class="container" data-analytics-app-name="app">\n  <a href="#" data-analytics-action="click" data-analytics-event-name="linking"\n    >Click me!</a\n  >\n</div>\n')),Object(l.b)("h2",{id:"plugins"},"Plugins"),Object(l.b)("p",null,"Plugins can be one or an array of objects/classes:"),Object(l.b)("p",null,"A default class with functions defined and enabled logic is provided ",Object(l.b)("inlineCode",{parentName:"p"},"AvAnalyticsPlugin"),"."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"import { AvAnalyticsPlugin } from '@availity/analytics-core';\n")),Object(l.b)("h3",{id:"plugin-methods"},"Plugin Methods"),Object(l.b)("p",null,"The functions/properties used by ",Object(l.b)("inlineCode",{parentName:"p"},"AvAnalytics")," are:"),Object(l.b)("h4",{id:"isenabled"},"isEnabled"),Object(l.b)("p",null,"Determines if this plugin will be called at various points.\nIf this is a function, the return value will be used. Otherwise will be checked as boolean."),Object(l.b)("h4",{id:"init"},"init"),Object(l.b)("p",null,"if defined, will be called when ",Object(l.b)("inlineCode",{parentName:"p"},"AvAnalytics")," is initialized."),Object(l.b)("h4",{id:"trackevent"},"trackEvent"),Object(l.b)("p",null,"if defined, called when ",Object(l.b)("inlineCode",{parentName:"p"},"AvAnalytics")," receives a trackEvent call."),Object(l.b)("h4",{id:"trackpageview"},"trackPageView"),Object(l.b)("p",null,"if defined, called when ",Object(l.b)("inlineCode",{parentName:"p"},"AvAnalytics")," receives a trackPageView call."),Object(l.b)("h2",{id:"defined-plugins"},"Defined Plugins"),Object(l.b)("h3",{id:"avsplunkanalytics"},"AvSplunkAnalytics"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"AvSplunkAnalytics")," is a plugin to track events with the ",Object(l.b)("inlineCode",{parentName:"p"},"AvLogMessages")," api.\nIt defaults the url and level before sending."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-js"},"import { AvSplunkAnalytics } from '@availity/analytics-core';\n\nconst exampleSplunkAnalytics = new AvSplunkAnalytics(\n  new AvLogMessages({ http, promise, merge }),\n  isEnabled\n);\n\nexport default exampleSplunkAnalytics;\n")),Object(l.b)("h2",{id:"methods"},"Methods"),Object(l.b)("h3",{id:"init-1"},Object(l.b)("inlineCode",{parentName:"h3"},"init()")),Object(l.b)("p",null,"Initialize analytics pageTracking and plugins"),Object(l.b)("h3",{id:"setpagetrackingvalue"},Object(l.b)("inlineCode",{parentName:"h3"},"setPageTracking(value)")),Object(l.b)("p",null,"use parameter to set turn page tracking on/off. Always checks that pageTracking has been set up or torn down as needed."),Object(l.b)("h3",{id:"trackeventproperties"},Object(l.b)("inlineCode",{parentName:"h3"},"trackEvent(properties)")),Object(l.b)("p",null,"Send properties to each plugins ",Object(l.b)("inlineCode",{parentName:"p"},"trackEvent")," function."),Object(l.b)("h3",{id:"trackpageviewurl"},Object(l.b)("inlineCode",{parentName:"h3"},"trackPageView(url)")),Object(l.b)("p",null,"Send url or ",Object(l.b)("inlineCode",{parentName:"p"},"location.href")," to each plugins ",Object(l.b)("inlineCode",{parentName:"p"},"trackEvent")," function."),Object(l.b)("h2",{id:"autotrack-logged-events"},"AutoTrack Logged events"),Object(l.b)("p",null,'With "autoTrack" enabled (enabled by default) you can add special ',Object(l.b)("inlineCode",{parentName:"p"},"data-analytics-*")," to any element which will be rendered to the DOM.\nFor native form elements (input, select, and textarea) with the special attribute, ",Object(l.b)("inlineCode",{parentName:"p"},"focus")," and ",Object(l.b)("inlineCode",{parentName:"p"},"blur")," events will trigger analytics to be logged.\nFor all other element with the special attribute, ",Object(l.b)("inlineCode",{parentName:"p"},"click")," events will trigger analytics to be logged.\nYou can have as many of the ",Object(l.b)("inlineCode",{parentName:"p"},"data-analytics-*")," attributes on an element as you which, all of the properties will be logged with the ",Object(l.b)("inlineCode",{parentName:"p"},"data-analytics-")," prefix removed and the remaining camelcased as the key and the value of the attribute as the logged value.\nThis works with all libraries such as angular, react, jquery, and pure HTML."),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-jsx"},'<a\n  href="/some-place-cool"\n  data-analytics-variation="b"\n  data-analytics-organization-id={orgId}\n  data-analytics-page-num={currentPage}\n>\n  Go there now!\n</a>\n')),Object(l.b)("pre",null,Object(l.b)("code",{parentName:"pre",className:"language-jsx"},"import React from 'react';\nimport { Input } from 'reactstrap';\n\nconst Component = ({ orgId }) => (\n  <Input data-analytics-variation=\"b\" data-analytics-organization-id={orgId} />\n);\n\nexport default Component;\n")),Object(l.b)("h2",{id:"logging-user-ids"},"Logging User Ids"),Object(l.b)("p",null,"Logs created with this component include user ids automatically, so no explicit logging is needed."),Object(l.b)("h2",{id:"special-attributes"},"Special Attributes"),Object(l.b)("p",null,"Below are a list of special attributes that can be used to help correlate your application when querying for data in the specified service. Note the prefix may chnage if you have overwritten it in the options."),Object(l.b)("h3",{id:"data-analytics-space-id"},Object(l.b)("inlineCode",{parentName:"h3"},"data-analytics-space-id")),Object(l.b)("p",null,"The ID of the Payer Space in which the application was navigated from. This generally will be in the query params at the time the user enters the application under ",Object(l.b)("inlineCode",{parentName:"p"},"spaceId"),".\nRequired for Insights reporting"),Object(l.b)("h3",{id:"data-analytics-application-id"},Object(l.b)("inlineCode",{parentName:"h3"},"data-analytics-application-id")),Object(l.b)("p",null,"Application ID. Can be set at the root of your project."),Object(l.b)("h3",{id:"data-analytics-action"},Object(l.b)("inlineCode",{parentName:"h3"},"data-analytics-action")),Object(l.b)("p",null,'Action the user performed on the page component (example: "click")'),Object(l.b)("h3",{id:"data-analytics-label"},Object(l.b)("inlineCode",{parentName:"h3"},"data-analytics-label")),Object(l.b)("p",null,'Label of the page element the user interacts with (example: "search")'),Object(l.b)("h3",{id:"data-analytics-category"},Object(l.b)("inlineCode",{parentName:"h3"},"data-analytics-category")),Object(l.b)("p",null,'Category of the page (example: "spaces application").'),Object(l.b)("h3",{id:"data-analytics-value"},Object(l.b)("inlineCode",{parentName:"h3"},"data-analytics-value")),Object(l.b)("p",null,"String value to be logged."),Object(l.b)("h2",{id:"tutorial"},"Tutorial"),Object(l.b)("p",null,"See ",Object(l.b)("a",{parentName:"p",href:"https://availity.github.io/availity-workflow/recipes/logging"},"Setting up logging")))}p.isMDXComponent=!0},111:function(e,a,t){"use strict";t.d(a,"a",(function(){return p})),t.d(a,"b",(function(){return g}));var n=t(0),i=t.n(n);function l(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function r(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?r(Object(t),!0).forEach((function(a){l(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function o(e,a){if(null==e)return{};var t,n,i=function(e,a){if(null==e)return{};var t,n,i={},l=Object.keys(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||(i[t]=e[t]);return i}(e,a);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)t=l[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var s=i.a.createContext({}),d=function(e){var a=i.a.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):c(c({},a),e)),t},p=function(e){var a=d(e.components);return i.a.createElement(s.Provider,{value:a},e.children)},b={inlineCode:"code",wrapper:function(e){var a=e.children;return i.a.createElement(i.a.Fragment,{},a)}},u=i.a.forwardRef((function(e,a){var t=e.components,n=e.mdxType,l=e.originalType,r=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),p=d(t),u=n,g=p["".concat(r,".").concat(u)]||p[u]||b[u]||l;return t?i.a.createElement(g,c(c({ref:a},s),{},{components:t})):i.a.createElement(g,c({ref:a},s))}));function g(e,a){var t=arguments,n=a&&a.mdxType;if("string"==typeof e||n){var l=t.length,r=new Array(l);r[0]=u;var c={};for(var o in a)hasOwnProperty.call(a,o)&&(c[o]=a[o]);c.originalType=e,c.mdxType="string"==typeof e?e:n,r[1]=c;for(var s=2;s<l;s++)r[s]=t[s];return i.a.createElement.apply(null,r)}return i.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);